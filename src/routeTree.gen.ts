/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as RegisterRouteImport } from './routes/Register'
import { Route as ProfileRouteImport } from './routes/Profile'
import { Route as LoginRouteImport } from './routes/Login'
import { Route as HomePageRouteImport } from './routes/HomePage'
import { Route as IndexRouteImport } from './routes/index'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/Register',
  path: '/Register',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/Profile',
  path: '/Profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/Login',
  path: '/Login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomePageRoute = HomePageRouteImport.update({
  id: '/HomePage',
  path: '/HomePage',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/HomePage': typeof HomePageRoute
  '/Login': typeof LoginRoute
  '/Profile': typeof ProfileRoute
  '/Register': typeof RegisterRoute
  '/about': typeof AboutRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/HomePage': typeof HomePageRoute
  '/Login': typeof LoginRoute
  '/Profile': typeof ProfileRoute
  '/Register': typeof RegisterRoute
  '/about': typeof AboutRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/HomePage': typeof HomePageRoute
  '/Login': typeof LoginRoute
  '/Profile': typeof ProfileRoute
  '/Register': typeof RegisterRoute
  '/about': typeof AboutRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/HomePage' | '/Login' | '/Profile' | '/Register' | '/about'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/HomePage' | '/Login' | '/Profile' | '/Register' | '/about'
  id:
    | '__root__'
    | '/'
    | '/HomePage'
    | '/Login'
    | '/Profile'
    | '/Register'
    | '/about'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomePageRoute: typeof HomePageRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RegisterRoute: typeof RegisterRoute
  AboutRoute: typeof AboutRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Register': {
      id: '/Register'
      path: '/Register'
      fullPath: '/Register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Profile': {
      id: '/Profile'
      path: '/Profile'
      fullPath: '/Profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/HomePage': {
      id: '/HomePage'
      path: '/HomePage'
      fullPath: '/HomePage'
      preLoaderRoute: typeof HomePageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomePageRoute: HomePageRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RegisterRoute: RegisterRoute,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
