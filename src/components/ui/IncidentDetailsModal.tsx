/* eslint-disable @typescript-eslint/no-explicit-any */
import { Dialog } from "@headlessui/react";
import jsPDF from "jspdf";

type IncidentDetailsModalProps = {
  open: boolean;
  onClose: () => void;
  incident: Record<string, any> | null;
};

// Componente modal para mostrar detalles de un incidente
export default function IncidentDetailsModal({
  open,
  onClose,
  incident,
}: IncidentDetailsModalProps) {
  // si no hay incidente, no renderizar nada
  if (!incident) return null;

  return (
    <Dialog open={open} onClose={onClose} className="fixed inset-0 z-50 flex items-center justify-center">
      {/* fondo oscuro */}
      <div className="fixed inset-0 bg-black/50 backdrop-blur-sm transition-opacity" />

      <Dialog.Panel className="bg-white dark:bg-slate-900 rounded-2xl shadow-lg max-w-lg w-full mx-4 p-6 relative z-10 animate-fadeIn">
        {/* título del modal */}
        <Dialog.Title className="text-xl font-semibold text-gray-800 dark:text-slate-100 mb-3">
          Incident #{incident.id}
        </Dialog.Title>

        {/* contenido con los campos del incidente */}
        <div className="space-y-2 text-gray-700 dark:text-slate-300 text-sm">
          <p>
            <strong>Type</strong>: {incident.type ?? incident.event_type ?? "N/A"}
          </p>
          <p>
            <strong>Address</strong>: {incident.address ?? incident.full_address ?? "N/A"}
          </p>
          <p>
            <strong>City</strong>: {incident.city ?? "N/A"}
          </p>
          <p>
            <strong>Date</strong>: {incident.date ?? incident.lead_date ?? "N/A"}
          </p>
          <p>
            <strong>Details</strong>: {incident.details ?? "N/A"}
          </p>
          <p>
            <strong>Owner Name</strong>: {incident.owner_name ?? incident.home_owner_name ?? "N/A"}
          </p>
          <p>
            <strong>Email</strong>: {incident.email ?? incident.home_owner_email ?? "N/A"}
          </p>
          <p>
            <strong>Phone</strong>: {incident.phone ?? incident.home_owner_phone ?? "N/A"}
          </p>
          <p>
            <strong>Price</strong>: ${incident.price ?? "0"}
          </p>
        </div>

        {/* acciones: descargar PDF y cerrar */}
        <div className="mt-5 flex justify-end gap-3">
          <button
            onClick={() => {
              const pdf = new jsPDF();
              pdf.setFont("helvetica", "normal");

              // título del PDF
              pdf.setFontSize(18);
              pdf.text(`Incident #${incident.id}`, 105, 20, { align: "center" });

              pdf.setFontSize(12);
              pdf.setTextColor(50, 50, 50);

              let y = 40;

              const addLine = (label: string, value: string | number | null) => {
                const text = `${label}: ${value ?? "N/A"}`;
                const wrapped = pdf.splitTextToSize(text, 180);

                // si el texto llega al final de la página, crear una nueva página
                if (y + wrapped.length * 6 > 280) {
                  pdf.addPage();
                  y = 20;
                }

                pdf.text(wrapped, 14, y);
                y += wrapped.length * 6 + 4;
              };

              // datos del incidente en el PDF
              addLine("Type", incident.type ?? "N/A");
              addLine("Address", incident.address ?? "N/A");
              addLine("City", incident.city ?? "N/A");
              addLine("Date", incident.date ?? "N/A");
              addLine("Details", incident.details ?? "N/A");
              addLine("Owner Name", incident.owner_name ?? "N/A");
              addLine("Email", incident.email ?? "N/A");
              addLine("Phone", incident.phone ?? "N/A");
              addLine("Purchase Date", incident.purchase_date ?? "N/A");
              addLine("Price", `$${incident.price ?? "0"}`);

              // pie de página
              pdf.setFontSize(10);
              pdf.setTextColor(150);
              pdf.text("Generated by DisasterMatch", 105, 285, { align: "center" });

              // guardar archivo
              pdf.save(`Incident_${incident.id}.pdf`);
            }}
            className="px-4 py-2 bg-indigo-600 text-white rounded-lg shadow hover:bg-indigo-700 transition"
          >
            Download PDF
          </button>

          <button
            onClick={onClose}
            className="px-4 py-2 bg-red-600 text-white rounded-lg shadow hover:bg-red-700 transition"
          >
            Close
          </button>
        </div>
      </Dialog.Panel>
    </Dialog>
  );
}

